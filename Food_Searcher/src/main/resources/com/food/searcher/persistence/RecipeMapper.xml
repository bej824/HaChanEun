<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper XML 설정 태그 -->

<!-- namespace : 연결할 Mapper 인터페이스 경로 및 이름 -->
<mapper namespace="com.food.searcher.persistence.RecipeMapper">

	<!-- <resultMap> : DB 쿼리 변환 데이터와 Entity(VO) 클래스의 멤버 변수 매핑을 정의하는 태그 - 속성 
		: type : 연결할 클래스의 패키지와 이름 id : SQL 쿼리 정의 태그에서 인식되는 이름 -->
	<resultMap type="com.food.searcher.domain.RecipeVO"
		id="recipeResultMap">
		<!-- <id> : key 컬럼 매핑 태그 <result> : 일반 컬럼 매핑 태그 - 속성 : property : Entity(VO) 
			멤버 변수 column : DB 테이블 컬럼 -->
		<id property="recipeId" column="RECIPE_ID" />
		<result property="recipeTitle" column="RECIPE_TITLE" />
		<result property="recipeFood" column="RECIPE_FOOD" />
		<result property="recipeContent" column="RECIPE_CONTENT" />
		<result property="recipeDateCreated"
			column="RECIPE_DATE_CREATE" jdbcType="DATE" />
		<result property="replyCount" column="REPLY_COUNT" />
		<result property="memberId" column="MEMBER_ID" />
	</resultMap>

	<!-- <select>, <insert>, <update>, <delete> : SQL 쿼리 정의 태그 - 속성 : id : Mapper 
		인터페이스 메서드 매핑 역할. resultMap : 쿼리 결과를 resultMap에 매핑. <resultMa>태그에 id를 적용 resultType 
		: 쿼리 결과를 클래스에 매핑. -->
	<insert id="insert">
		INSERT INTO RECIPE (RECIPE_ID, RECIPE_TITLE,
		RECIPE_FOOD, RECIPE_CONTENT, MEMBER_ID)
		VALUES (RECIPE_SEQ.NEXTVAL,
		#{recipeTitle}, #{recipeFood}, #{recipeContent}, #{memberId})
	</insert>
	<!-- #{변수명} : Mapper 인터페이스 메소드 매개변수와 매핑되어 전송된 데이터를 적용 -->

	<select id="selectList" resultMap="recipeResultMap">
		<!-- 전체 게시글 조회 -->
		SELECT * FROM RECIPE ORDER BY RECIPE_ID DESC
	</select>

	<select id="selectOne" resultMap="recipeResultMap">
		<!-- 상세 게시글 조회 -->
		SELECT * FROM RECIPE WHERE RECIPE_ID = #{recipeId}
	</select>

	<select id="selectSearch" resultMap="recipeResultMap">
		<!-- 상세 게시글 조회 -->
		SELECT * FROM RECIPE WHERE RECIPE_TITLE LIKE '%' || #{recipeTitle} ||
		'%' ORDER BY RECIPE_ID DESC
	</select>

	<select id="selectFood" resultMap="recipeResultMap">
		<!-- 상세 게시글 조회 -->
		SELECT * FROM RECIPE WHERE RECIPE_FOOD LIKE '%' || #{recipeFood} ||
		'%' ORDER BY RECIPE_ID DESC
	</select>

	<select id="selectId" resultMap="recipeResultMap">
		<!-- 상세 게시글 조회 -->
		SELECT * FROM RECIPE WHERE MEMBER_ID LIKE '%' || #{memberId} || '%'
		ORDER BY RECIPE_ID DESC
	</select>

	<select id="selectContent" resultMap="recipeResultMap">
		<!-- 상세 게시글 조회 -->
		SELECT * FROM RECIPE WHERE RECIPE_CONTENT LIKE '%' || #{recipeContent}
		|| '%' ORDER BY RECIPE_ID DESC
	</select>

	<update id="update">
		<!-- 상세 게시글 수정 -->
		UPDATE RECIPE SET RECIPE_TITLE = #{recipeTitle}, RECIPE_FOOD =
		#{recipeFood}, RECIPE_CONTENT = #{recipeContent} WHERE RECIPE_ID =
		#{recipeId}
	</update>

	<delete id="delete">
		<!-- 상세 게시글 삭제 -->
		DELETE FROM RECIPE WHERE RECIPE_ID = #{recipeId}
	</delete>

	<select id="selectListByPagination" resultMap="recipeResultMap">
		SELECT * FROM
		(
		SELECT ROW_NUMBER() OVER (ORDER BY RECIPE_ID DESC)
		AS RN, RECIPE.* FROM RECIPE
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>

	<!-- #{start} : pagination 객체의 getStart() #{end} : pagination 객체의 getEnd() -->

	<!-- resultType : 쿼리 결과를 자바 객체에 매핑하기 위해 사용 -->
	<select id="selectTotalCount" resultType="Integer">
		SELECT COUNT(*) TOTAL_COUNT FROM RECIPE
	</select>

	<select id="selectTitleByPagination" resultMap="recipeResultMap">
		SELECT * FROM
		(
		SELECT RECIPE.*, ROW_NUMBER() OVER (ORDER BY RECIPE_ID DESC) AS RN
		FROM RECIPE
		WHERE RECIPE_TITLE LIKE '%' || #{keyword} || '%'
		)
		WHERE RN BETWEEN #{pagination.start} AND #{pagination.end}
	</select>
	
	<select id="selectFoodByPagination" resultMap="recipeResultMap">
		SELECT * FROM
		(
		SELECT RECIPE.*, ROW_NUMBER() OVER (ORDER BY RECIPE_ID DESC) AS RN
		FROM RECIPE
		WHERE RECIPE_FOOD LIKE '%' || #{keyword} || '%'
		)
		WHERE RN BETWEEN #{pagination.start} AND #{pagination.end}
	</select>
	
	<select id="selectContentByPagination" resultMap="recipeResultMap">
		SELECT * FROM
		(
		SELECT RECIPE.*, ROW_NUMBER() OVER (ORDER BY RECIPE_ID DESC) AS RN
		FROM RECIPE
		WHERE RECIPE_CONTENT LIKE '%' || #{keyword} || '%'
		)
		WHERE RN BETWEEN #{pagination.start} AND #{pagination.end}
	</select>
	
	<select id="selectMemberByPagination" resultMap="recipeResultMap">
		SELECT * FROM
		(
		SELECT RECIPE.*, ROW_NUMBER() OVER (ORDER BY RECIPE_ID DESC) AS RN
		FROM RECIPE
		WHERE MEMBER_ID LIKE '%' || #{keyword} || '%'
		)
		WHERE RN BETWEEN #{pagination.start} AND #{pagination.end}
	</select>

	<select id="titleTotalCount" resultType="Integer">
		SELECT COUNT(*) TOTAL_COUNT FROM RECIPE WHERE RECIPE_TITLE LIKE '%' || #{recipeTitle} || '%'
	</select>
	
	<select id="foodTotalCount" resultType="Integer">
		SELECT COUNT(*) TOTAL_COUNT FROM RECIPE WHERE RECIPE_FOOD LIKE '%' || #{recipeTitle} || '%'
	</select>
	
	<select id="contentTotalCount" resultType="Integer">
		SELECT COUNT(*) TOTAL_COUNT FROM RECIPE WHERE RECIPE_CONTENT LIKE '%' || #{recipeTitle} || '%'
	</select>
	
	<select id="memberTotalCount" resultType="Integer">
		SELECT COUNT(*) TOTAL_COUNT FROM RECIPE WHERE MEMBER_ID LIKE '%' || #{recipeTitle} || '%'
	</select>

	<update id="updateReplyCount">
		UPDATE RECIPE
		SET REPLY_COUNT = REPLY_COUNT + #{amount}
		WHERE RECIPE_ID =
		#{recipeId}
	</update>

</mapper>