<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.food.searcher.persistence.MemberMapper">

	<resultMap type="com.food.searcher.domain.MemberVO"
		id="memberResultMap">
		
		<id property="memberId" column="MEMBER_ID" /> 
		<result property="password" column="PASSWORD" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberDateOfBirth" column="MEMBER_DATE_OF_BIRTH" />
		<result property="email" column="EMAIL" />
		<result property="emailAgree" column="EMAIL_AGREE" />
		<result property="memberAge" column="MEMBER_AGE" />
		<result property="memberGender" column="MEMBER_GENDER" />
		<result property="memberMBTI" column="MEMBER_MBTI" />
		<result property="memberConstellation" column="MEMBER_CONSTELLATION" />
		<result property="memberStatus" column="MEMBER_STATUS" />
	</resultMap>
	
	<resultMap type="com.food.searcher.domain.RoleVO"
		id="roleResultMap">
		<id property="roleId" column="ROLE_ID" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="roleName" column="ROLE_NAME" />
	</resultMap>
	
	<insert id="insertMember">
		INSERT INTO MEMBER 
		(MEMBER_ID
		,PASSWORD
		,MEMBER_NAME
		,MEMBER_DATE_OF_BIRTH
		,EMAIL
		,EMAIL_AGREE
		,MEMBER_GENDER
		,MEMBER_MBTI
		,MEMBER_STATUS)
		VALUES 
		(#{memberId}
		,#{password}
		,#{memberName}
		,#{memberDateOfBirth}
		,#{email}
		,#{emailAgree}
		,#{memberGender}
		,#{memberMBTI}
		,'active')

	</insert>
	
	<select id="selectMemberByMemberId" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<select id ="countMemberById" resultType="Integer">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<select id="searchId" resultMap="memberResultMap">
		SELECT MEMBER_ID, MEMBER_STATUS
		FROM MEMBER
		WHERE 1=1
		<if test="memberName != null and memberName != '' and email != null and email != ''">
			AND MEMBER_NAME = #{memberName} 
			AND EMAIL = #{email}
		</if>
		<if test="memberDateOfBirth != 0 and memberDateOfBirth != ''">
			AND MEMBER_DATE_OF_BIRTH = #{memberDateOfBirth}
		</if>
		<if test="memberMBTI != null and memberMBTI != ''">
			AND MEMBER_MBTI = #{memberMBTI}
		</if>
		<if test="memberId != null and memberId != ''">
			AND MEMBER_ID = #{memberId}
		</if>
	</select>
	
	<select id="searchPw" resultType="String">
		SELECT PASSWORD
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<update id="updatePasswordByMemberId">
		UPDATE MEMBER SET 
		PASSWORD = #{password}
		WHERE MEMBER_ID = #{memberId}
		<if test="login == false">
		AND EMAIL = #{email}
		</if>
	</update>
	
	<update id="updateMemberByMemberId">
		UPDATE MEMBER
		SET
		MEMBER_MBTI = #{memberMBTI},
		EMAIL_AGREE = #{emailAgree}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<update id="updateStatusByMemberId">
		UPDATE MEMBER 
		SET MEMBER_STATUS = #{memberStatus}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<update id="updateEmailByMemberId">
		UPDATE MEMBER 
		SET EMAIL = #{email}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	
	<insert id="insertRole">
		INSERT INTO MEMBER_ROLE
		(ROLE_ID, MEMBER_ID,
		ROLE_NAME)
		VALUES (ROLE_SEQ.NEXTVAL, #{memberId}, #{roleName})
	</insert>

	<select id="selectRoleByMemberId" resultMap="roleResultMap">
		SELECT * FROM MEMBER_ROLE
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<update id="updateRoleByMemberId">
		UPDATE MEMBER_ROLE
		SET ROLE_NAME = #{roleName}
		WHERE MEMBER_ID = #{memberId}
	</update>

</mapper>



